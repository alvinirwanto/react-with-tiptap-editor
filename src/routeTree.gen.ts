/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const EventPengajuanEventLazyImport = createFileRoute(
  '/event/pengajuan-event',
)()
const EventListLazyImport = createFileRoute('/event/list')()
const DeviasiUsulanDeviasiLazyImport = createFileRoute(
  '/deviasi/usulan-deviasi',
)()
const DeviasiListLazyImport = createFileRoute('/deviasi/list')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EventPengajuanEventLazyRoute = EventPengajuanEventLazyImport.update({
  id: '/event/pengajuan-event',
  path: '/event/pengajuan-event',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/event/pengajuan-event.lazy').then((d) => d.Route),
)

const EventListLazyRoute = EventListLazyImport.update({
  id: '/event/list',
  path: '/event/list',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/event/list.lazy').then((d) => d.Route))

const DeviasiUsulanDeviasiLazyRoute = DeviasiUsulanDeviasiLazyImport.update({
  id: '/deviasi/usulan-deviasi',
  path: '/deviasi/usulan-deviasi',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/deviasi/usulan-deviasi.lazy').then((d) => d.Route),
)

const DeviasiListLazyRoute = DeviasiListLazyImport.update({
  id: '/deviasi/list',
  path: '/deviasi/list',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/deviasi/list.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/deviasi/list': {
      id: '/deviasi/list'
      path: '/deviasi/list'
      fullPath: '/deviasi/list'
      preLoaderRoute: typeof DeviasiListLazyImport
      parentRoute: typeof rootRoute
    }
    '/deviasi/usulan-deviasi': {
      id: '/deviasi/usulan-deviasi'
      path: '/deviasi/usulan-deviasi'
      fullPath: '/deviasi/usulan-deviasi'
      preLoaderRoute: typeof DeviasiUsulanDeviasiLazyImport
      parentRoute: typeof rootRoute
    }
    '/event/list': {
      id: '/event/list'
      path: '/event/list'
      fullPath: '/event/list'
      preLoaderRoute: typeof EventListLazyImport
      parentRoute: typeof rootRoute
    }
    '/event/pengajuan-event': {
      id: '/event/pengajuan-event'
      path: '/event/pengajuan-event'
      fullPath: '/event/pengajuan-event'
      preLoaderRoute: typeof EventPengajuanEventLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deviasi/list': typeof DeviasiListLazyRoute
  '/deviasi/usulan-deviasi': typeof DeviasiUsulanDeviasiLazyRoute
  '/event/list': typeof EventListLazyRoute
  '/event/pengajuan-event': typeof EventPengajuanEventLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deviasi/list': typeof DeviasiListLazyRoute
  '/deviasi/usulan-deviasi': typeof DeviasiUsulanDeviasiLazyRoute
  '/event/list': typeof EventListLazyRoute
  '/event/pengajuan-event': typeof EventPengajuanEventLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/deviasi/list': typeof DeviasiListLazyRoute
  '/deviasi/usulan-deviasi': typeof DeviasiUsulanDeviasiLazyRoute
  '/event/list': typeof EventListLazyRoute
  '/event/pengajuan-event': typeof EventPengajuanEventLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/deviasi/list'
    | '/deviasi/usulan-deviasi'
    | '/event/list'
    | '/event/pengajuan-event'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/deviasi/list'
    | '/deviasi/usulan-deviasi'
    | '/event/list'
    | '/event/pengajuan-event'
  id:
    | '__root__'
    | '/'
    | '/deviasi/list'
    | '/deviasi/usulan-deviasi'
    | '/event/list'
    | '/event/pengajuan-event'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeviasiListLazyRoute: typeof DeviasiListLazyRoute
  DeviasiUsulanDeviasiLazyRoute: typeof DeviasiUsulanDeviasiLazyRoute
  EventListLazyRoute: typeof EventListLazyRoute
  EventPengajuanEventLazyRoute: typeof EventPengajuanEventLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeviasiListLazyRoute: DeviasiListLazyRoute,
  DeviasiUsulanDeviasiLazyRoute: DeviasiUsulanDeviasiLazyRoute,
  EventListLazyRoute: EventListLazyRoute,
  EventPengajuanEventLazyRoute: EventPengajuanEventLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/deviasi/list",
        "/deviasi/usulan-deviasi",
        "/event/list",
        "/event/pengajuan-event"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/deviasi/list": {
      "filePath": "deviasi/list.lazy.tsx"
    },
    "/deviasi/usulan-deviasi": {
      "filePath": "deviasi/usulan-deviasi.lazy.tsx"
    },
    "/event/list": {
      "filePath": "event/list.lazy.tsx"
    },
    "/event/pengajuan-event": {
      "filePath": "event/pengajuan-event.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
